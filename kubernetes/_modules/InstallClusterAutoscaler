InstallClusterAutoscaler() {

	SyncRepo

	echo -e "\nRemoving Cluster Autoscaler..\n"
	${KUBECTL} --kubeconfig="${HOME}/${CLUSTER_NAME}-kubeconfig" -n kube-system delete secret cluster-autoscaler-azure-deploy-parameters
	${KUBECTL} --kubeconfig="${HOME}/${CLUSTER_NAME}-kubeconfig" delete -f ../cluster-autoscaler/06-cluster-proportional-autoscaler-deployment.yaml
	${KUBECTL} --kubeconfig="${HOME}/${CLUSTER_NAME}-kubeconfig" delete -f ../cluster-autoscaler/05-cluster-proportional-autoscaler-configmap.yaml
	${KUBECTL} --kubeconfig="${HOME}/${CLUSTER_NAME}-kubeconfig" delete -f ../cluster-autoscaler/04-cluster-proportional-autoscaler-rbac.yaml
	${KUBECTL} --kubeconfig="${HOME}/${CLUSTER_NAME}-kubeconfig" delete -f ../cluster-autoscaler/03-overprovisioning-deployment.yaml
	${KUBECTL} --kubeconfig="${HOME}/${CLUSTER_NAME}-kubeconfig" delete -f ../cluster-autoscaler/02-overprovisioning-priority-class.yaml
	${KUBECTL} --kubeconfig="${HOME}/${CLUSTER_NAME}-kubeconfig" delete -f ../cluster-autoscaler/01-cluster-autoscaler.yaml
	${KUBECTL} --kubeconfig="${HOME}/${CLUSTER_NAME}-kubeconfig" delete -f ../cluster-autoscaler/00-acr-secret.yaml

	echo -e "\nSleeping for 30 seconds..\n"
	sleep 30

	echo -e "\nInstalling Cluster Autoscaler..\n"

	while [[ -z "${_CLIENT_ID}" ]]
	do
		echo -e "Enter Azure Client ID: \c"
		read _CLIENT_ID
	done

	while [[ -z "${CLIENT_SECRET}" ]]
	do
		echo -e "Enter Azure Client Secret: \c"
		read CLIENT_SECRET
	done

	while [[ -z "${AZURE_RESOURCE_GROUP}" ]]
	do
		echo -e "Enter Azure Resource Group name: \c"
		read AZURE_RESOURCE_GROUP
	done

	while [[ -z "${SUBSCRIPTION_ID}" ]]
	do
		echo -e "Enter Azure Subscription ID: \c"
		read SUBSCRIPTION_ID
	done

	while [[ -z "${AZURE_TENANT_ID}" ]]
	do
		echo -e "Enter Azure Tenant ID: \c"
		read AZURE_TENANT_ID
	done

	SERVICE_PRINCIPAL_BASE64=$(echo ${_CLIENT_ID} | tr -d '\n' | base64)
	CLIENT_SECRET_BASE64=$(echo ${CLIENT_SECRET} | tr -d '\n' | base64)
	AZURE_RESOURCE_GROUP_BASE64=$(echo ${AZURE_RESOURCE_GROUP}  | tr -d '\n' | base64)
	SUBSCRIPTION_ID_BASE64=$(echo ${SUBSCRIPTION_ID}  | tr -d '\n' | base64)
	AZURE_TENANT_ID_BASE64=$(echo ${AZURE_TENANT_ID} | tr -d '\n' | base64)
	ACS_CLUSTER_DEPLOYMENT_NAME_BASE64=$(echo ${AZURE_RESOURCE_GROUP}-deploy | tr -d '\n' | base64)
	AGENT_POOL_NAME="`echo ${CLUSTER_NAME} | cut -c1-9`n01"

	${KUBECTL} --kubeconfig="${HOME}/${CLUSTER_NAME}-kubeconfig" -n kube-system create secret generic cluster-autoscaler-azure-deploy-parameters --from-file=deploy-parameters=./_output/${CLUSTER_NAME}/azuredeploy.parameters.json

	cat ../cluster-autoscaler/01-cluster-autoscaler.yaml.template \
		| sed "s|SERVICE_PRINCIPAL_BASE64|${SERVICE_PRINCIPAL_BASE64}|g" \
		| sed "s|CLIENT_SECRET_BASE64|${CLIENT_SECRET_BASE64}|g" \
		| sed "s|AZURE_RESOURCE_GROUP_BASE64|${AZURE_RESOURCE_GROUP_BASE64}|g" \
		| sed "s|SUBSCRIPTION_ID_BASE64|${SUBSCRIPTION_ID_BASE64}|g" \
		| sed "s|AZURE_TENANT_ID_BASE64|${AZURE_TENANT_ID_BASE64}|g" \
		| sed "s|ACS_CLUSTER_DEPLOYMENT_NAME_BASE64|${ACS_CLUSTER_DEPLOYMENT_NAME_BASE64}|g" \
		| sed "s|MIN_NODES|${CLUSTER_AUTOSCALER_MIN_NODES}|g" \
		| sed "s|MAX_NODES|${CLUSTER_AUTOSCALER_MAX_NODES}|g" \
		| sed "s|AGENT_POOL_NAME|${AGENT_POOL_NAME}|g" > ../cluster-autoscaler/01-cluster-autoscaler.yaml

	${KUBECTL} --kubeconfig="${HOME}/${CLUSTER_NAME}-kubeconfig" create -f ../cluster-autoscaler/00-acr-secret.yaml
	${KUBECTL} --kubeconfig="${HOME}/${CLUSTER_NAME}-kubeconfig" create -f ../cluster-autoscaler/01-cluster-autoscaler.yaml
	${KUBECTL} --kubeconfig="${HOME}/${CLUSTER_NAME}-kubeconfig" create -f ../cluster-autoscaler/02-overprovisioning-priority-class.yaml
	${KUBECTL} --kubeconfig="${HOME}/${CLUSTER_NAME}-kubeconfig" create -f ../cluster-autoscaler/03-overprovisioning-deployment.yaml
	${KUBECTL} --kubeconfig="${HOME}/${CLUSTER_NAME}-kubeconfig" create -f ../cluster-autoscaler/04-cluster-proportional-autoscaler-rbac.yaml
	${KUBECTL} --kubeconfig="${HOME}/${CLUSTER_NAME}-kubeconfig" apply -f ../cluster-autoscaler/05-cluster-proportional-autoscaler-configmap.yaml
	${KUBECTL} --kubeconfig="${HOME}/${CLUSTER_NAME}-kubeconfig" create -f ../cluster-autoscaler/06-cluster-proportional-autoscaler-deployment.yaml

	git add ../cluster-autoscaler/01-cluster-autoscaler.yaml
	git commit -m "`basename $0` - Updated Cluster Autoscaler YAML generated by setup script"
	git push

	echo -e "\nAdding Annotation to Slave Nodes to disable scale-down..\n"
	_SLAVE_NODES=$(${KUBECTL} --kubeconfig="${HOME}/${CLUSTER_NAME}-kubeconfig" get nodes -o name | grep -vi master | awk -F'/' '{ print $2 }')
	for _SLAVE_NODE in ${_SLAVE_NODES[@]}
	do
		echo -e "\nAnnotating Node: ${_SLAVE_NODE}"
		${KUBECTL} --kubeconfig="${HOME}/${CLUSTER_NAME}-kubeconfig" annotate node "${_SLAVE_NODE}" cluster-autoscaler.kubernetes.io/scale-down-disabled=true
	done
}
